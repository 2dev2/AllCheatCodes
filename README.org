* CheatSheet
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/cheatsheet.dennyzhang.com"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
<div id="the whole thing" style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>

<br/><br/>
<a href="http://makeapullrequest.com" target="_blank" rel="nofollow"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome"/></a>
#+END_HTML

Blog: https://cheatsheet.dennyzhang.com/

File me [[https://github.com/DennyZhang/cheatsheet.dennyzhang.com/issues][Issues]] or star [[https://github.com/DennyZhang/cheatsheet.dennyzhang.com][this repo]]

See more cheatsheets from Denny: [[https://github.com/topics/denny-cheatsheets][#denny-cheatsheets]]

** Common Actions
- git push all local cheatsheet updates: =make git-push=
- Pull changes for all remote cheatsheet git repos: =make git-pull=
- Refresh all cheatsheet blog posts: =make refresh-wordpress=

** More Resources
 License: Code is licensed under [[https://www.dennyzhang.com/wp-content/mit_license.txt][MIT License]].
#+BEGIN_HTML
 <a href="https://www.dennyzhang.com"><img align="right" width="201" height="268" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/denny_201706.png"></a>
 <a href="https://www.dennyzhang.com"><img align="right" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/dns_small.png"></a>

 <a href="https://www.linkedin.com/in/dennyzhang001"><img align="bottom" src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a>
 <a href="https://github.com/DennyZhang"><img align="bottom"src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a>
 <a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img align="bottom" src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a>
#+END_HTML
* org-mode configuration                                           :noexport:
#+STARTUP: overview customtime noalign logdone hidestars
#+DESCRIPTION: 
#+KEYWORDS: 
#+AUTHOR: Denny Zhang
#+EMAIL:  denny@dennyzhang.com
#+TAGS: noexport(n)
#+PRIORITIES: A D C
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_EXCLUDE_TAGS: exclude noexport BLOG
#+SEQ_TODO: TODO HALF ASSIGN | DONE BYPASS DELEGATE CANCELED DEFERRED
#+LINK_UP:   
#+LINK_HOME: 
* GitHub Repo Sharing: cheatsheet.dennyzhang.com                   :BLOG:Life:
:PROPERTIES:
:type:     Life, Ads, Popular
:END:
---------------------------------------------------------------------
Trying to collect interesting leetcode.com puzzles. And solve them in Python. Here is the code in [[url-external:https://github.com/DennyZhang/leetcode_interesting_python][GitHub]].

[[image-blog:GitHub Repo Sharing: leetcode_python][https://cdn.dennyzhang.com/images/brain/github_interesting_leetcode.png]]

---------------------------------------------------------------------
In this website, a large portion of problems come from [[url-external:https://leetcode.com][leetcode.com]].

Personally I'm trying to solve all of them in Python. Here is my solution in [[url-external:https://github.com/DennyZhang/leetcode_interesting_python][GitHub]].

Check it out and discuss with me. [[color:#c7254e][Remember: We Two Is Just One Click Away!]]
[[github:DennyZhang][Github]]
More Reading:
- [[https://code.dennyzhang.com/category/life/][Category: Life]]
* Contact CheatSheets                                                  :BLOG:
:PROPERTIES:
:type:     life
:END:

Hi there

I'm [[https://www.linkedin.com/in/dennyzhang001][Denny Zhang]]. A coder at work.

[[https://cheatsheet.dennyzhang.com/contact][https://cdn.dennyzhang.com/images/brain/denny_intro.jpg]]

#+BEGIN_HTML
<div id="the whole thing" style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/DennyZhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>
#+END_HTML

[[color:#c7254e][Why I maintain this blog?]] [[https://cheatsheet.dennyzhang.com]]

I'm bad at memorizing things. Forget to do something on time? Poorly prepared?

These usually result in uncomfortable experience!

Why not collect the best practices? Then present them as cheatsheets for different scenarios. Should be a good idea, right?

Each cheatsheet will come as a dedicated blog post. [[color:#c7254e][And everything is also available in GitHub]]: [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com][cheatsheet.dennyzhang.com]]

Hope you find the website useful?

If not, please talk to me.

Let's make it better. More people could benefit from our effort.

Cheers!

- See more cheatsheets:

#+BEGIN_HTML
[get_tags]
#+END_HTML

---------------------------------------------------------------------
- See all blogs I'm actively maintaining:

| Blog                          | Link                              |
|-------------------------------+-----------------------------------|
| DevOps blog                   | https://www.dennyzhang.com        |
| Code tests for interviews     | https://code.dennyzhang.com       |
| Learn system design           | https://architect.dennyzhang.com  |
| Cheatsheet for best practices | https://cheatsheet.dennyzhang.com |
| Examine skills in a hard way  | https://quiz.dennyzhang.com       |
* CANCELED                                                         :noexport:
** CANCELED Create symol link: https://cheatsheet.dennyzhang.com/cheatsheet-kubernetes :noexport:
   CLOSED: [2018-09-09 Sun 00:42]
* DONE                                                             :noexport:
** DONE cheatsheet: add category
   CLOSED: [2018-08-14 Tue 00:31]
** DONE cheatsheet: main page layout
   CLOSED: [2018-08-14 Tue 00:31]

** DONE cheatsheet: change forkme to the specific repo
   CLOSED: [2018-08-14 Tue 23:11]
** DONE github add blog link in two places
   CLOSED: [2018-08-15 Wed 17:53]

** DONE cheatsheet add uptimerobot monitoring
   CLOSED: [2018-08-15 Wed 18:02]

** DONE cheatsheet add github repo: https://github.com/DennyZhang/cheatsheet.dennyzhang.com
   CLOSED: [2018-08-15 Wed 19:50]
** DONE cheatsheet: add submodules
   CLOSED: [2018-08-15 Wed 19:50]
** CANCELED move adsense to the right, and also related cheatsheets: https://cheatsheet.dennyzhang.com/cheatsheet-golang/
   CLOSED: [2018-08-15 Wed 19:50]

** CANCELED cheatsheet add blog post summary
   CLOSED: [2018-08-15 Wed 19:51]

** CANCELED make blog wider: https://cheatsheet.dennyzhang.com/cheatsheet-kubernets/
   CLOSED: [2018-08-15 Wed 19:51]

** DONE cheatsheet: Use emacs to update everything automatically
   CLOSED: [2018-08-15 Wed 20:24]

** DONE cheatsheet: linkedin icon: http://cheatsheet.dennyzhang.com/cheatsheet-groovy/
   CLOSED: [2018-08-15 Wed 20:29]

** DONE org-mode configuration: https://github.com/dennyzhang/cheatsheet-pks-A4
   CLOSED: [2018-08-15 Wed 20:29]
** DONE github repo add link back to my blog post
   CLOSED: [2018-08-15 Wed 20:28]
** DONE blog post: list everything by category
   CLOSED: [2018-08-16 Thu 00:08]

** CANCELED first adsense doesn't show up: https://cheatsheet.dennyzhang.com/contact
   CLOSED: [2018-08-16 Thu 00:08]

** CANCELED cheatsheet ssl issue: http://cheatsheet.dennyzhang.com/cheatsheet-groovy/
   CLOSED: [2018-08-16 Thu 00:08]
** CANCELED no summary or preview
   CLOSED: [2018-08-16 Thu 00:09]
* TODO [#A] cheatsheet.dennyzhang.com                              :noexport:
** TODO align icon horizontally in blog: https://cheatsheet.dennyzhang.com/cheatsheet-golang/
https://cheatsheet.dennyzhang.com/contact
https://code.dennyzhang.com/contact
** TODO [#A] export more github repo to cheatsheet blog
** HALF icon: emacs, uaac
** TODO featured image: the same height
** #  --8<-------------------------- separator ------------------------>8-- :noexport:
** [#A] similar websites: dash                                    :IMPORTANT:
https://kapeli.com/cheatsheets
** similar websites: 
https://www.cheatsheet.com/
https://www.mediaatelier.com/CheatSheet/
** #  --8<-------------------------- separator ------------------------>8-- :noexport:
** TODO cheatsheet: tail the sns: http://cheatsheet.dennyzhang.com/cheatsheet-knative/
** TODO link back to original website, instead of a common website
** #  --8<-------------------------- separator ------------------------>8-- :noexport:
** HALF file link doesn't look nice: http://cheatsheet.dennyzhang.com/cheatsheet-golang/
** TODO How people can contribute?
** #  --8<-------------------------- separator ------------------------>8-- :noexport:
** Discussion
*** TODO make the font bigger
* TODO [#A] Generate cheatsheet PDF A4                             :noexport:
** TODO [#A] Line too long: line wrap, without truncation
** Add site url, version, logo
** TODO Change font size to smaller
** #  --8<-------------------------- separator ------------------------>8-- :noexport:
** Make the page wider: https://github.com/dennyzhang/cheatsheet-bosh-A4/blob/master/cheatsheet-bosh-A4.pdf
** TODO Add author info
** Add link color
** Add url domain icon to the pdf
** #  --8<-------------------------- separator ------------------------>8-- :noexport:
** [#A] latex template
https://www.overleaf.com/gallery/tagged/cheat-sheet#.W42wnJNKjMU
https://wch.github.io/latexsheet/
https://tex.stackexchange.com/questions/8827/preparing-cheat-sheets
** DONE error message: need to install pdflatex
   CLOSED: [2018-09-03 Mon 17:36]
/bin/bash: pdflatex: command not found
#+BEGIN_EXAMPLE
Debugger entered--Lisp error: (error "File \"/Users/zdenny/Dropbox/git_code/cheatsheet.dennyzhang.com/cheatsheet-kubernetes-A4/README.pdf\" wasn’t produced.  See \"*Org PDF LaTeX Output*\" for details")
  signal(error ("File \"/Users/zdenny/Dropbox/git_code/cheatsheet.dennyzhang.com/cheatsheet-kubernetes-A4/README.pdf\" wasn’t produced.  See \"*Org PDF LaTeX Output*\" for details"))
  error("File \"/Users/zdenny/Dropbox/git_code/cheatsheet.dennyzhang.com/cheatsheet-kubernetes-A4/README.pdf\" wasn't produced.  See \"*Org PDF LaTeX Output*\" for details")
  org-compile-file("README.tex" ("%L -interaction nonstopmode -output-directory %o %f" "%L -interaction nonstopmode -output-directory %o %f" "%L -interaction nonstopmode -output-directory %o %f") "pdf" "See \"*Org PDF LaTeX Output*\" for details" #<buffer *Org PDF LaTeX Output*> ((66 . "bibtex") (76 . "pdflatex")))
  org-latex-compile("README.tex")
  #f(compiled-function (file) #<bytecode 0x4149e2f9>)("README.tex")
  org-export-to-file(latex "README.tex" nil nil nil nil nil #f(compiled-function (file) #<bytecode 0x4149e2f9>))
  org-latex-export-to-pdf(nil nil nil nil)
  org-export-dispatch(nil)
  funcall-interactively(org-export-dispatch nil)
  call-interactively(org-export-dispatch nil nil)
  command-execute(org-export-dispatch)
#+END_EXAMPLE
** TODO Convert your blog posts to pdf
https://www.overleaf.com/articles/html-cheat-sheet-new/ykrnwnsgyvtk#.W1YiYtgzry0

Convert your blog posts to pdf and submit it to document sharing sites, here is a list of document sharing sites for you to get started.
http://www.shoutmeloud.com/101-ways-to-get-quality-backlinks-to-your-blog.html

** DONE
*** DONE Change backup filename: README.pdf
    CLOSED: [2018-09-03 Mon 16:33]
*** DONE Add latex html support: mute the html block
    CLOSED: [2018-09-03 Mon 17:35]
*** DONE Update link script: pdf, and export_file_name
    CLOSED: [2018-09-03 Mon 17:35]
** TODO generate A4 pdf: https://github.com/PrateekKumarSingh/CheatSheets :noexport:
* TODO [#A] Role model                                             :noexport:
** http://cheatsheetworld.com/
** [#A] https://github.com/rstacruz/cheatsheets
** python: https://github.com/crazyguitar/pysheeet
** python: https://github.com/trekhleb/learn-python
** ai: https://github.com/kailashahirwar/cheatsheets-ai
** golang: https://github.com/a8m/go-lang-cheat-sheet
** mindmap: https://github.com/dformoso/machine-learning-mindmap
** reactjs: https://github.com/vhpoet/react-native-styling-cheat-sheet
** git: https://github.com/arslanbilal/git-cheat-sheet
** angularjs: https://github.com/mgechev/angular-performance-checklist
** https://github.com/LeCoupa/awesome-cheatsheets
** javascript: https://github.com/mbeaudru/modern-js-cheatsheet
** https://github.com/liorvh/Cheatsheets-1         :noexport:
** good interactive way: https://cheat.sh/cd
https://github.com/chubin/cheat.sh
** emoji: https://www.webfx.com/tools/emoji-cheat-sheet/
https://github.com/WebpageFX/emoji-cheat-sheet.com
** aggregation: https://github.com/remigiusz-suwalski/programming-cheatsheets
** TODO Role model: good latex/pdf: https://github.com/rstudio/cheatsheets
** TODO how to show code snippets in a better way: https://github.com/DrkSephy/es6-cheatsheet :noexport:
** TODO [#A] Role model: enable people to use it as a command line https://github.com/chrisallenlane/cheat
** TODO [#A] Role model: enable people to autocomplete https://github.com/chrisallenlane/cheat
** TODO [#A] Role model: enable people to grow it as a community https://github.com/chrisallenlane/cheat
* TODO [#A] Layout suggestions                                     :noexport:
** TODO [#A] emacs wordpress block width: https://cheatsheet.dennyzhang.com/cheatsheet-concourse :noexport:
 It's different from this:
 https://cheatsheet.dennyzhang.com/cheatsheet-find
** #  --8<-------------------------- separator ------------------------>8-- :noexport:
** TODO [#A] org-mode two talbes horizontally: https://devhints.io/bash :noexport:
 https://cheatsheet.dennyzhang.com/cheatsheet-shell-A4
** TODO support emoji usage                                        :noexport:
** TODO ssl certificate warning: https://cheatsheet.dennyzhang.com/cheatsheet-emacs :noexport:
** Add most popular cheatsheet to github readme
* TODO [#A] Improve Content                                        :noexport:
** TODO improve jq cheatsheet                                      :noexport:
** TODO opensource improvement: apt cheatsheet                     :noexport:
 http://sai628.com/2017-02-27-homebrew-cheatsheet.html
 https://www.anintegratedworld.com/neat-little-brew-cheat-sheet/
 https://joshbuchea.com/homebrew-cheatsheet/
 http://macappstore.org/cheatsheet/
 https://gist.github.com/kpearson/9661ea5de9f460fb5e8b
 https://github.com/SebastianBoldt/Homebrew-Cheatsheet
** HALF Implement Common Data Structures But Missing In Golang :noexport:Language:
   :PROPERTIES:
   :type:     golang, language
   :END:
 ---------------------------------------------------------------------
 Golang is hot. But if you're from 

 Here are things I [[color:#c7254e][like and dislike]].

 Check it out. And share your experience or feedback with me.

 [[image-blog:My Common Python Coding Mistakes][https://raw.githubusercontent.com/dennyzhang/images/master/blog/python_logo.jpg]]
 ---------------------------------------------------------------------
 Related Resources In GitHub from Denny:

 [[url-external:https://github.com/dennyzhang/cheatsheet-golang-A4][cheatsheet-golang-A4]]
 [[url-external:https://github.com/dennyzhang/cheatsheet-python-A4][cheatsheet-python-A4]]
 [[github:DennyZhang][Github]]
*** BFS vs DFS
 https://code.dennyzhang.com/keys-and-rooms
*** TrieTree
*** Set
*** Reverse A list
*** github repo
 ---------------------------------------------------------------------
 Related Reading:

 [display-posts tag="language" posts_per_page="100" orderby="title"]
** TODO Blog: "apt-get update" stuck                               :noexport:
 Ign http://mirrors.linode.com trusty/universe Translation-en_US
 100% [Connecting to security.ubuntu.com (2001:67c:1560:8001::11)]

#+BEGIN_EXAMPLE
 root@explorees6:~# ps -ef | grep apt
 root      7347  7190  0 12:17 ?        00:00:00 apt-get update
 root      7352  7347  0 12:17 ?        00:00:00 /usr/lib/apt/methods/http
 root      7353  7347  0 12:17 ?        00:00:00 /usr/lib/apt/methods/http
 root      7355  7347  0 12:17 ?        00:00:00 /usr/lib/apt/methods/gpgv
 root      7361  7347  0 12:17 ?        00:00:03 /usr/lib/apt/methods/copy
 root      7417  7383  0 12:24 pts/2    00:00:00 grep --color=auto apt

 root@explorees6:~# ps -ef | grep 7190
 root      7190  7185  0 12:17 ?        00:00:03 chef-solo worker: ppid=7185;start=12:17:10;
 root      7347  7190  0 12:17 ?        00:00:00 apt-get update
 root      7430  7383  0 12:26 pts/2    00:00:00 grep --color=auto 7190
#+END_EXAMPLE
** TODO [#A] Blog: Tcpdump                                         :noexport:
 | Item                                                                        | Comment                                                                         |
 |-----------------------------------------------------------------------------+---------------------------------------------------------------------------------|
 | tcpdump -D                                                                  | 得到当前机器的所有的网卡, 例如eth0, lo, any等                                   |
 | tcpdump -i lo 'port 9107' -vvv -XX                                          | -XX 将数据报文以hex和ascii方式打印出来                                          |
 | tcpdump -i lo 'port 9107' -vvv -XX -s 0                                     | 默认至多打印96个package,　通过-s 0可以打印出所有的package                       |
 | tcpdump -i lo 'port 9107' -vvv -XX -s 0 -f                                  | -f打印主机ip,　而非主机名                                                       |
 | tcpdump -nn -i any 'host 192.168.75.236 ' -vvv -XX -s 0 -f                  | 不转义port number, host address                                                 |
 | Package的flag                                                               | S(SYN),F(FIN),P(PUSH),R(RST),W(ECNCWR) or E(ECN-Echo), or a single`.'(no flags) |
 | tcpdump -vvv -XX -s 0 -f -c 100 -nn -i eth0 'not port 22 and not port 3128' |                                                                                 |
 | tcpdump -i any -n -v 'icmp'                                                 |                                                                                 |
*** TCP flags                                                      :noexport:
 http://en.wikipedia.org/wiki/Transmission_Control_Protocol\\
#+begin_example
     * Flags (9 bits) (aka Control bits) – contains 9 1-bit flags
         * NS (1 bit) – ECN-nonce concealment protection (added to header by RFC 3540).
         * CWR (1 bit) – Congestion Window Reduced (CWR) flag is set by the sending host to indicate that it received a TCP segment with the ECE flag set and had responded in congestion control mechanism (added to header by RFC 3168).
         * ECE (1 bit) – ECN-Echo indicates

             * If the SYN flag is set (1), that the TCP peer is ECN capable.
             * If the SYN flag is clear (0), that a packet with Congestion Experienced flag in IP header set is received during normal transmission (added to header by RFC 3168).

         * URG (1 bit) – indicates that the Urgent pointer field is significant
         * ACK (1 bit) – indicates that the Acknowledgment field is significant. All packets after the initial SYN packet sent by the client should have this flag set.
         * PSH (1 bit) – Push function. Asks to push the buffered data to the receiving application.
         * RST (1 bit) – Reset the connection
         * SYN (1 bit) – Synchronize sequence numbers. Only the first packet sent from each end should have this flag set. Some other flags change meaning based on this flag, and some are only valid for when it is set, and others when it is clear.
         * FIN (1 bit) – No more data from sender
#+end_example
*** TCP connection state                                           :noexport:
 http://en.wikipedia.org/wiki/Transmission_Control_Protocol\\
#+begin_example
    1. LISTENING : In case of a server, waiting for a connection request from any remote client.
    2. SYN-SENT : waiting for the remote peer to send back a TCP segment with the SYN and ACK flags set. (usually set by TCP clients)
    3. SYN-RECEIVED : waiting for the remote peer to send back an acknowledgment after having sent back a connection acknowledgment to the remote peer. (usually set by TCP servers)
    4. ESTABLISHED : The port is ready to receive/send data from/to the remote peer.
    5. FIN-WAIT-1 :
    6. CLOSE-WAIT : Indicated that the server is waiting for the application process on its end to signal that it is ready to close.
    7. FIN-WAIT-2 : Indicates that the client is waiting for the server's fin segment (which indicates the server's application process is ready to close and the server is ready to initiate its side of the connection termination)
    8. CLOSE-WAIT : The server receives notice from the local application that it is done. The server sends its fin to the client.
    9. LAST-ACK : Indicates that the server is in the process of sending its own fin segment (which indicates the server's application process is ready to close and the server is ready to initiate it's side of the connection termination )
   10. TIME-WAIT : Represents waiting for enough time to pass to be sure the remote peer received the acknowledgment of its connection termination request. According to RFC 793 a connection can stay in TIME-WAIT for a maximum of four minutes known as a MSL (maximum segment lifetime).
   11. CLOSED : Connection is closed
#+end_example
*** TCP的报文监听时,　发现前三个是TCP建立链接的报文(SYN, SYN, .); 后三个是TCP断开链接的报文(FIN, FIN, .) :noexport:
*** [#A] [问题] 如何使用tcpdump来监听某个pid的所甩数据通讯        :IMPORTANT:
*** [#A] 问题: 为什么总有一个报文的cksum显示为incorrect            :noexport:
#+begin_example
 15:29:58.225329 00:00:00:00:00:00 (oui Ethernet) > 00:00:00:00:00:00 (oui Ethernet), ethertype IPv4 (0x0800), length 74: (tos 0x0, ttl  64, id 17585, offset 0, flags [DF], proto: TCP (6), length: 60) 192.168.51.128.39751 > 192.168.51.128.9107: S, cksum 0x5ef3 (correct), 1870406958:1870406958(0) win 32768 <mss 16396,sackOK,timestamp 508715423 508712090,nop,wscale 7>
         0x0000:  0000 0000 0000 0000 0000 0000 0800 4500  ..............E.
         0x0010:  003c 44b1 4000 4006 0dba c0a8 3380 c0a8  .<D.@.@.....3...
         0x0020:  3380 9b47 2393 6f7c 252e 0000 0000 a002  3..G#.o|%.......
         0x0030:  8000 5ef3 0000 0204 400c 0402 080a 1e52  ..^.....@......R
         0x0040:  619f 1e52 549a 0103 0307                 a..RT.....
 15:29:58.225447 00:00:00:00:00:00 (oui Ethernet) > 00:00:00:00:00:00 (oui Ethernet), ethertype IPv4 (0x0800), length 74: (tos 0x0, ttl  64, id 0, offset 0, flags [DF], proto: TCP (6), length: 60) 192.168.51.128.9107 > 192.168.51.128.39751: S, cksum 0x02aa (correct), 2884825920:2884825920(0) ack 1870406959 win 12288 <mss 16396,sackOK,timestamp 508715423 508715423,nop,wscale 7>
         0x0000:  0000 0000 0000 0000 0000 0000 0800 4500  ..............E.
         0x0010:  003c 0000 4000 4006 526b c0a8 3380 c0a8  .<..@.@.Rk..3...
         0x0020:  3380 2393 9b47 abf2 f340 6f7c 252f a012  3.#..G...@o|%/..
         0x0030:  3000 02aa 0000 0204 400c 0402 080a 1e52  0.......@......R
         0x0040:  619f 1e52 619f 0103 0307                 a..Ra.....
 15:29:58.225515 00:00:00:00:00:00 (oui Ethernet) > 00:00:00:00:00:00 (oui Ethernet), ethertype IPv4 (0x0800), length 66: (tos 0x0, ttl  64, id 17586, offset 0, flags [DF], proto: TCP (6), length: 52) 192.168.51.128.39751 > 192.168.51.128.9107: ., cksum 0x9ace (correct), 1:1(0) ack 1 win 256 <nop,nop,timestamp 508715423 508715423>
         0x0000:  0000 0000 0000 0000 0000 0000 0800 4500  ..............E.
         0x0010:  0034 44b2 4000 4006 0dc1 c0a8 3380 c0a8  .4D.@.@.....3...
         0x0020:  3380 9b47 2393 6f7c 252f abf2 f341 8010  3..G#.o|%/...A..
         0x0030:  0100 9ace 0000 0101 080a 1e52 619f 1e52  ...........Ra..R
         0x0040:  619f                                     a.
 15:29:58.253032 00:00:00:00:00:00 (oui Ethernet) > 00:00:00:00:00:00 (oui Ethernet), ethertype IPv4 (0x0800), length 89: (tos 0x0, ttl  64, id 17587, offset 0, flags [DF], proto: TCP (6), length: 75) 192.168.51.128.39751 > 192.168.51.128.9107: P, cksum 0xe88e (incorrect (-> 0xf680), 1:24(23) ack 1 win 256 <nop,nop,timestamp 508715451 508715423>
         0x0000:  0000 0000 0000 0000 0000 0000 0800 4500  ..............E.
         0x0010:  004b 44b3 4000 4006 0da9 c0a8 3380 c0a8  .KD.@.@.....3...
         0x0020:  3380 9b47 2393 6f7c 252f abf2 f341 8018  3..G#.o|%/...A..
         0x0030:  0100 e88e 0000 0101 080a 1e52 61bb 1e52  ...........Ra..R
         0x0040:  619f 8001 0001 0000 000a 6765 7456 6572  a.........getVer
         0x0050:  7369 6f6e 0000 0000 00                   sion.....
 15:29:58.253056 00:00:00:00:00:00 (oui Ethernet) > 00:00:00:00:00:00 (oui Ethernet), ethertype IPv4 (0x0800), length 66: (tos 0x0, ttl  64, id 37598, offset 0, flags [DF], proto: TCP (6), length: 52) 192.168.51.128.9107 > 192.168.51.128.39751: ., cksum 0x9b1f (correct), 1:1(0) ack 24 win 96 <nop,nop,timestamp 508715451 508715451>
         0x0000:  0000 0000 0000 0000 0000 0000 0800 4500  ..............E.
         0x0010:  0034 92de 4000 4006 bf94 c0a8 3380 c0a8  .4..@.@.....3...
         0x0020:  3380 2393 9b47 abf2 f341 6f7c 2546 8010  3.#..G...Ao|%F..
         0x0030:  0060 9b1f 0000 0101 080a 1e52 61bb 1e52  .`.........Ra..R
         0x0040:  61bb                                     a.
#+end_example
*** [#A] [question] 数据报文中,　前面若干字节的意义
*** [#A] [question] 数据报文中, ACK的序号是如何准确对应的
*** [question] DF的flags包是什么意思
*** useful link
    http://www.ha97.com/4550.html\\
*** DONE tcpdump for icmp
    CLOSED: [2013-12-01 Sun 00:29]
 http://hi.baidu.com/xiao0/item/4df4851ce875644ee65e06c0

 抓ICMP echo request（请求包）：
                tcpdump -i eth1 'icmp[0]=8'
       抓ICMP echo reply （回应包）：
                tcpdump -i eth1 'icmp[0]=0'
        tcpdump太好用了。

 tcpdump -i any -n -v 'icmp'
 tcpdump -i any -n -v 'icmp[icmptype] = icmp-echoreply or icmp[icmptype] = icmp-echo'
#+begin_example
 [root@localhost ~(keystone_admin)]# tcpdump -i any -n -v 'icmp[icmptype] = icmp-echoreply or icmp[icmptype] = icmp-echo'
 < -v 'icmp[icmptype] = icmp-echoreply or icmp[icmptype] = icmp-echo'
 tcpdump: listening on any, link-type LINUX_SLL (Linux cooked), capture size 65535 bytes
 12:39:44.808859 IP (tos 0x0, ttl 64, id 0, offset 0, flags [DF], proto ICMP (1), length 84)
     192.168.1.189 > 192.168.1.74: ICMP echo request, id 15926, seq 40, length 64
 12:39:44.808979 IP (tos 0x0, ttl 64, id 0, offset 0, flags [DF], proto ICMP (1), length 84)
     192.168.1.189 > 192.168.1.74: ICMP echo request, id 15926, seq 40, length 64
 12:39:44.849453 IP (tos 0x0, ttl 64, id 19154, offset 0, flags [DF], proto ICMP (1), length 84)
     192.168.1.74 > 192.168.1.189: ICMP echo reply, id 15926, seq 40, length 64
 12:39:44.849453 IP (tos 0x0, ttl 64, id 19154, offset 0, flags [DF], proto ICMP (1), length 84)
     192.168.1.74 > 192.168.1.189: ICMP echo reply, id 15926, seq 40, length 64
 12:39:45.810927 IP (tos 0x0, ttl 64, id 0, offset 0, flags [DF], proto ICMP (1), length 84)
     192.168.1.189 > 192.168.1.74: ICMP echo request, id 15926, seq 41, length 64
 12:39:45.810987 IP (tos 0x0, ttl 64, id 0, offset 0, flags [DF], proto ICMP (1), length 84)
     192.168.1.189 > 192.168.1.74: ICMP echo request, id 15926, seq 41, length 64
 12:39:45.819917 IP (tos 0x0, ttl 64, id 22904, offset 0, flags [DF], proto ICMP (1), length 84)
     192.168.1.74 > 192.168.1.189: ICMP echo reply, id 15926, seq 41, length 64
 12:39:45.819917 IP (tos 0x0, ttl 64, id 22904, offset 0, flags [DF], proto ICMP (1), length 84)
     192.168.1.74 > 192.168.1.189: ICMP echo reply, id 15926, seq 41, length 64
 12:39:46.812663 IP (tos 0x0, ttl 64, id 0, offset 0, flags [DF], proto ICMP (1), length 84)
     192.168.1.189 > 192.168.1.74: ICMP echo request, id 15926, seq 42, length 64
 12:39:46.812712 IP (tos 0x0, ttl 64, id 0, offset 0, flags [DF], proto ICMP (1), length 84)
     192.168.1.189 > 192.168.1.74: ICMP echo request, id 15926, seq 42, length 64
 12:39:46.846869 IP (tos 0x0, ttl 64, id 17861, offset 0, flags [DF], proto ICMP (1), length 84)
     192.168.1.74 > 192.168.1.189: ICMP echo reply, id 15926, seq 42, length 64
 12:39:46.846869 IP (tos 0x0, ttl 64, id 17861, offset 0, flags [DF], proto ICMP (1), length 84)
#+end_example
* TODO [#A] Make it more useful                                    :noexport:
** TODO enable people to better search; https://devhints.io/       :noexport:
** TODO [#A] generate TOC: https://cheatsheet.dennyzhang.com/cheatsheet-kubernetes :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO [#B] Fail the pdf generating job when some lines are truncated :noexport:
* TODO Build internal links                                        :noexport:
* TODO Change infrequent cheatsheet github to blog post            :noexport:
* TODO Add guideline for how people to contribute                  :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO split drive test into a dedicated one: https://cheatsheet.dennyzhang.com/cheatsheet-living-in-ca :noexport:
* TODO convert page into github repos                              :noexport:
** https://cheatsheet.dennyzhang.com/cheatsheet-networking-A4
** https://cheatsheet.dennyzhang.com/cheatsheet-sed-A4
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO PR: add my yaml examples to https://github.com/kubernetes/examples :noexport:
* TODO add sample file link: https://cheatsheet.dennyzhang.com/cheatsheet-sed-A4
