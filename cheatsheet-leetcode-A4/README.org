* CheatSheet: Leetcode Common Templates & Common Code Problems    :Languages:
:PROPERTIES:
:type:     language
:export_file_name: cheatsheet-leetcode-A4.pdf
:END:

#+BEGIN_HTML
<a href="https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-leetcode-A4"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
<div id="the whole thing" style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>

<br/><br/>
<a href="http://makeapullrequest.com" target="_blank" rel="nofollow"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome"/></a>
#+END_HTML

- PDF Link: [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-leetcode-A4/cheatsheet-leetcode-A4.pdf][cheatsheet-leetcode-A4.pdf]], Category: [[https://cheatsheet.dennyzhang.com/category/languages/][languages]]
- Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4
- Related posts: [[https://cheatsheet.dennyzhang.com/cheatsheet-systemdesign-A4][CheatSheet: System Design For Code Interview]], [[https://github.com/topics/denny-cheatsheets][#denny-cheatsheets]]

File me [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/issues][Issues]] or star [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com][this repo]].

- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: 30 Common Code Problems & Follow-ups]]
** Top 25 Code Templates
| Num | Category/Tag                       | Example                                                       |
|-----+------------------------------------+---------------------------------------------------------------|
|   1 | [[https://code.dennyzhang.com/review-bfs][#bfs]]                               | [[https://code.dennyzhang.com/binary-tree-level-order-traversal][Leetcode: Binary Tree Level Order Traversal]]                   |
|   2 | [[https://code.dennyzhang.com/review-dfs][#dfs]]                               | [[https://code.dennyzhang.com/island-perimeter][Leetcode: Island Perimeter]]                                    |
|   3 | [[https://code.dennyzhang.com/review-binarysearch][#binarysearch]]                      | [[https://code.dennyzhang.com/search-insert-position][Leetcode: Search Insert Position]]                              |
|   4 | [[https://code.dennyzhang.com/review-interval][#interval]], [[https://code.dennyzhang.com/tag/mergetwolist][#mergetwolist]]           | [[https://code.dennyzhang.com/interval-list-intersections][Leetcode: Interval List Intersections]]                         |
|   5 | [[https://code.dennyzhang.com/review-twopointer][#twopointer]], [[https://code.dennyzhang.com/tag/array][#array]]                | [[https://code.dennyzhang.com/reverse-words-in-a-string-ii][Leetcode: Reverse Words in a String II]]                        |
|   6 | [[https://code.dennyzhang.com/review-twopointer][#twopointer]]                        | [[https://code.dennyzhang.com/two-sum][Leetcode: Two Sum]]                                             |
|   7 | [[https://code.dennyzhang.com/review-backtracking][#backtracking]], [[https://code.dennyzhang.com/tag/subset][#subset]]             | [[https://code.dennyzhang.com/subsets-ii][Leetcode: Subsets II]]                                          |
|   8 | [[https://code.dennyzhang.com/review-linkedlist][#linkedlist]], [[https://code.dennyzhang.com/followup-presum][#presum]]               | [[https://code.dennyzhang.com/remove-zero-sum-consecutive-nodes-from-linked-list][Leetcode: Remove Zero Sum Consecutive Nodes from Linked List]]  |
|   9 | [[https://code.dennyzhang.com/review-unionfind][#unionfind]]                         | [[https://code.dennyzhang.com/accounts-merge][Leetcode: Accounts Merge]]                                      |
|  10 | [[https://code.dennyzhang.com/review-trie][#trie]]                              | [[https://code.dennyzhang.com/longest-word-in-dictionary][Leetcode: Longest Word in Dictionary]]                          |
|  11 | [[https://code.dennyzhang.com/review-stack][#stack]]                             | [[https://code.dennyzhang.com/valid-parentheses][Leetcode: Valid Parentheses]]                                   |
|  12 | [[https://code.dennyzhang.com/review-stack][#stack]]                             | [[https://code.dennyzhang.com/reverse-substrings-between-each-pair-of-parentheses][Leetcode: Reverse Substrings Between Each Pair of Parentheses]] |
|  13 | [[https://code.dennyzhang.com/review-heap][#heap]]                              | [[https://code.dennyzhang.com/top-k-frequent-elements][Leetcode: Top K Frequent Elements]]                             |
|  14 | [[https://code.dennyzhang.com/followup-baseconversion][#baseconversion]]                    | [[https://code.dennyzhang.com/base-7][Leetcode: Base 7]]                                              |
|  15 | [[https://code.dennyzhang.com/review-interval][#interval]]                          | [[https://code.dennyzhang.com/meeting-rooms-ii][Leetcode: Meeting Rooms II]], [[https://code.dennyzhang.com/my-calendar-i][Leetcode: My Calendar I]]           |
|  16 | [[https://code.dennyzhang.com/review-monotone][#monotone]]                          | [[https://code.dennyzhang.com/daily-temperatures][Leetcode: Daily Temperatures]]                                  |
|  17 | [[https://code.dennyzhang.com/review-knapsack][#knapsack]]                          | [[https://code.dennyzhang.com/coin-change][Leetcode: Coin Change]]                                         |
|  18 | [[https://code.dennyzhang.com/tag/sortbyfunction][#sortbyfunction]]                    | [[https://code.dennyzhang.com/relative-sort-array][Leetcode: Relative Sort Array]]                                 |
|  19 | [[https://code.dennyzhang.com/review-slidingwindow][#slidingwindow]]                     | [[https://code.dennyzhang.com/longest-substring-without-repeating-characters][Leetcode: Longest Substring Without Repeating Characters]]      |
|  20 | [[https://code.dennyzhang.com/followup-editdistance][#editdistance]], [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]] | [[https://code.dennyzhang.com/longest-common-subsequence][Leetcode: Longest Common Subsequence]]                          |
|  21 | [[https://code.dennyzhang.com/review-twopointer][#twopointer]], [[https://code.dennyzhang.com/tag/mergetwolist][#mergetwolist]]         | [[https://code.dennyzhang.com/merge-sorted-array][Leetcode: Merge Sorted Array]]                                  |
|  22 | [[https://code.dennyzhang.com/review-topologicalsort][#topologicalsort]]                   | [[https://code.dennyzhang.com/course-schedule][Leetcode: Course Schedule]]                                     |
|  23 | [[https://code.dennyzhang.com/review-bfs][#bfs]], [[https://code.dennyzhang.com/review-bfs][bidirectional bfs]]            | [[https://code.dennyzhang.com/word-ladder][Leetcode: Word Ladder]]                                         |
|  24 | [[https://code.dennyzhang.com/review-divideconquer][#divideconquer]], [[https://code.dennyzhang.com/review-recursive][#recursive]]         |                                                               |
|  25 |                                    |                                                               |
#+TBLFM: $1=@-1$1+1;N

** Top 20 Graph Problems
| Num | Problem                                                                 | Category/Tag              | Summary                                                 |
|-----+-------------------------------------------------------------------------+---------------------------+---------------------------------------------------------|
|   1 | Graph Connectivity: Count islands in a 2D matrix                        | [[https://code.dennyzhang.com/review-dfs][#dfs]], [[https://code.dennyzhang.com/review-unionfind][#unionfind]]          | [[https://code.dennyzhang.com/number-of-islands][Leetcode: Number of Islands]], [[https://code.dennyzhang.com/island-perimeter][Leetcode: Island Perimeter]] |
|   2 | Get the size of the largest island                                      | [[https://code.dennyzhang.com/review-dfs][#dfs]]                      | [[https://code.dennyzhang.com/max-area-of-island][Leetcode: Max Area of Island]]                            |
|   3 | Find shortest distance for two nodes in an undirected graph             | [[https://code.dennyzhang.com/review-bfs][#bfs]]                      |                                                         |
|   4 | Cycle detection in an undirected graph                                  |                           |                                                         |
|   5 | Cycle detection in a directed graph                                     | [[https://code.dennyzhang.com/review-topologicalsort][#topologicalsort]]          | [[https://code.dennyzhang.com/redundant-connection-ii][Leetcode: Redundant Connection II]]                       |
|   6 | Detect all cycles in a directred graph                                  | [[https://code.dennyzhang.com/review-dfs][#dfs]], [[https://code.dennyzhang.com/review-bfs][#bfs]]                | [[https://code.dennyzhang.com/find-eventual-safe-states][Leetcode: Find Eventual Safe States]]                     |
|   7 | Whether a graph is a tree                                               | [[https://code.dennyzhang.com/review-unionfind][#unionfind]], [[https://code.dennyzhang.com/review-bfs][#bfs]]          | [[https://code.dennyzhang.com/graph-valid-tree][Leetcode: Graph Valid Tree]]                              |
|   8 | [[https://en.wikipedia.org/wiki/Minimum_spanning_tree][Minimum spanning tree]] of a weighted graph - [[https://en.wikipedia.org/wiki/Kruskal%27s_algorithm][Kruskal's algorithm]]         | [[https://code.dennyzhang.com/review-unionfind][#unionfind]]                | [[https://code.dennyzhang.com/connecting-cities-with-minimum-cost][Leetcode: Connecting Cities With Minimum Cost]]           |
|   9 | Shortest path for two nodes in a weighted graph -  [[https://en.wikipedia.org/wiki/Dijkstra's_algorithm][Dijkstra's algorithm]] |                           |                                                         |
|  10 | Find shortest paths in a weighted graph - [[https://en.wikipedia.org/wiki/Floyd-Warshall_algorithm][Floyd-Warshall algorithm]]      | [[https://code.dennyzhang.com/review-dfs][#dfs]], [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]] |                                                         |
|  11 | Update a specific region                                                | [[https://code.dennyzhang.com/review-dfs][#dfs]]                      | [[https://code.dennyzhang.com/flood-fill][Leetcode: Flood Fill]]                                    |
|  12 | Update regions for a given rule                                         |                           | [[https://code.dennyzhang.com/surrounded-regions][Leetcode: Surrounded Regions]]                            |
|  13 | Mark levels                                                             |                           | [[https://code.dennyzhang.com/01-matrix][Leetcode: 01 Matrix]]                                     |
|  14 | Duplicate edges                                                         |                           | [[https://code.dennyzhang.com/reconstruct-itinerary][Leetcode: Reconstruct Itinerary]]                         |
|  15 | Find a certain node in a graph                                          | [[https://code.dennyzhang.com/review-unionfind][#unionfind]]                | [[https://code.dennyzhang.com/find-the-celebrity][Leetcode: Find the Celebrity]]                            |
|  16 | Find a certain path from source to destination in a graph               |                           | [[https://code.dennyzhang.com/path-with-maximum-minimum-value][Leetcode: Path With Maximum Minimum Value]]               |
|  17 | Find the minimum steps from point1 to point2                            |                           | [[https://code.dennyzhang.com/word-ladder][Leetcode: Word Ladder]], [[https://code.dennyzhang.com/sliding-puzzle][Leetcode: Sliding Puzzle]]         |
|  18 | Find all minimum paths from point1 to point2                            |                           | [[https://code.dennyzhang.com/word-ladder-ii][Leetcode: Word Ladder II]]                                |
|  19 | All Paths from Source Lead to Destination                               |                           | [[https://code.dennyzhang.com/all-paths-from-source-lead-to-destination][Leetcode: All Paths from Source Lead to Destination]]     |
|  20 |                                                                         |                           |                                                         |
#+TBLFM: $1=@-1$1+1;N

#+BEGIN_HTML
<a href="https://code.dennyzhang.com"><b><font color=blue>https://code.dennyzhang.com</font></b></a>
#+END_HTML

[[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][https://cdn.dennyzhang.com/images/brain/denny_leetcode.png]]
#+BEGIN_HTML
<a href="https://cheatsheet.dennyzhang.com"><img align="right" width="185" height="37" src="https://raw.githubusercontent.com/dennyzhang/cheatsheet.dennyzhang.com/master/images/cheatsheet_dns.png"></a>
#+END_HTML

** Top 5 Binarysearch Problems
| Num | Problem                             | Category/Tag  | Summary                                                                |
|-----+-------------------------------------+---------------+------------------------------------------------------------------------|
|   1 | Search Insert Position              | [[https://code.dennyzhang.com/review-binarysearch][#binarysearch]] | [[https://code.dennyzhang.com/search-insert-position][Leetcode: Search Insert Position]], [[https://code.dennyzhang.com/time-based-key-value-store][Leetcode: Time Based Key-Value Store]] |
|   2 | Find the first true                 | [[https://code.dennyzhang.com/review-binarysearch][#binarysearch]] | [[https://code.dennyzhang.com/first-bad-version][Leetcode: First Bad Version]]                                            |
|   3 | Find the last true                  | [[https://code.dennyzhang.com/review-binarysearch][#binarysearch]] |                                                                        |
|   4 | Binary search on monotonic function | [[https://code.dennyzhang.com/review-binarysearch][#binarysearch]] |                                                                        |
|   5 |                                     | [[https://code.dennyzhang.com/review-binarysearch][#binarysearch]] |                                                                        |
#+TBLFM: $1=@-1$1+1;N

** Top 10 Dynamic Programming Problems
| Num | Problem                                       | Time Complexity | Category/Tag                             | Summary                                   |
|-----+-----------------------------------------------+-----------------+------------------------------------------+-------------------------------------------|
|   1 | [[https://en.wikipedia.org/wiki/Maximum_subarray_problem][Maximum subarray problem]] - [[https://en.wikipedia.org/wiki/Maximum_subarray_problem#Kadane's_algorithm][Kadane's algorithm]] | O(n)            | [[https://code.dennyzhang.com/followup-maxsubarraysum][#maxsubarraysum]], [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]]     | [[https://code.dennyzhang.com/maximum-subarray][Leetcode: Maximum Subarray]]                |
|   2 | [[https://en.wikipedia.org/wiki/Longest_increasing_subsequence][LIS - Longest increasing subsequence]]          | O(n)            | [[https://code.dennyzhang.com/followup-lis][#lis]], [[https://code.dennyzhang.com/review-string][#string]], [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]]       | [[https://code.dennyzhang.com/longest-increasing-subsequence][Leetcode: Longest Increasing Subsequence]]  |
|   3 | [[https://en.wikipedia.org/wiki/Longest_common_subsequence_problem][LCS - Longest Common Subsequence]]              | O(n*m)          | [[https://code.dennyzhang.com/followup-lcs][#lcs]], [[https://code.dennyzhang.com/followup-editdistance][#editdistance]], [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]] | [[https://code.dennyzhang.com/longest-common-subsequence][Leetcode: Longest Common Subsequence]]      |
|   4 | Longest Palindromic Subsequence               | O(n)            | [[https://code.dennyzhang.com/review-palindrome][#palindrome]], [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]]         | [[https://code.dennyzhang.com/longest-palindromic-subsequence][Leetcode: Longest Palindromic Subsequence]] |
|   5 | [[https://en.wikipedia.org/wiki/Longest_palindromic_substring][Longest Palindromic Substring]]                 | O(n^2)/O(n)     | [[https://code.dennyzhang.com/review-palindrome][#palindrome]],[[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]]          | [[https://code.dennyzhang.com/longest-palindromic-substring][Leetcode: Longest Palindromic Substring]]   |
|   6 | [[https://en.wikipedia.org/wiki/Edit_distance][Edit distance of two strings]]                  | O(n^2)          | [[https://code.dennyzhang.com/followup-editdistance][#editdistance]], [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]]       | [[https://code.dennyzhang.com/edit-distance][Leetcode: Edit Distance]]                   |
|   7 | Maximum profits with certain costs            | O(n^2)          | [[https://code.dennyzhang.com/followup-maxprofitwithcost][#maxprofitwithcost]], [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]]  | [[https://code.dennyzhang.com/4-keys-keyboard][Leetcode: 4 Keys Keyboard]]                 |
|   8 | Regular Expression Matching                   | O(n*m)          | [[https://code.dennyzhang.com/followup-editdistance][#editdistance]], [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]]       | [[https://code.dennyzhang.com/regular-expression-matching][Leetcode: Regular Expression Matching]]     |
|   9 | Count of distinct subsequence                 | O(n)            | [[https://code.dennyzhang.com/followup-countdistinctmoves][#countdistinctmoves]], [[https://code.dennyzhang.com/followup-hashmap][#hashmap]]            | [[https://code.dennyzhang.com/distinct-subsequences-ii][Leetcode: Distinct Subsequences II]]        |
|  10 |                                               |                 |                                          |                                           |
#+TBLFM: $1=@-1$1+1;N

** Top 10 BinaryTree Problems
| Num | Problem                                           | Category/Tag | Summary                                                               |
|-----+---------------------------------------------------+--------------+-----------------------------------------------------------------------|
|   1 | Binary Tree Level Order Traversal                 | [[https://code.dennyzhang.com/review-bfs][#bfs]]         | [[https://code.dennyzhang.com/binary-tree-right-side-view][Leetcode: Binary Tree Right Side View]]                                 |
|   2 | Height of binary tree                             | [[https://code.dennyzhang.com/review-dfs][#dfs]]         | [[https://code.dennyzhang.com/balanced-binary-tree][Leetcode: Balanced Binary Tree]]                                        |
|   3 | LCA - Lowest Common Ancestor of a binary Tree     | [[https://code.dennyzhang.com/review-dfs][#dfs]]         | [[https://code.dennyzhang.com/lowest-common-ancestor-of-a-binary-tree][Leetcode: Lowest Common Ancestor of a Binary Tree]]                     |
|   4 | Check whether a binary tree is a full binary tree | [[https://code.dennyzhang.com/review-dfs][#dfs]], [[https://code.dennyzhang.com/review-bfs][#bfs]]   |                                                                       |
|   5 | Construct binary tree                             | [[https://code.dennyzhang.com/review-recursive][#recursive]]   | [[https://code.dennyzhang.com/construct-binary-tree-from-preorder-and-postorder-traversal][Leetcode: Construct Binary Tree from Preorder and Postorder Traversal]] |
|   6 | Right view of a tree                              |              |                                                                       |
#+TBLFM: $1=@-1$1+1;N
** Top 5 String Problems
| Num | Problem                      | Category/Tag                       | Summary                  |
|-----+------------------------------+------------------------------------+--------------------------|
|   1 | [[https://en.wikipedia.org/wiki/Edit_distance][Edit distance of two strings]] | [[https://code.dennyzhang.com/followup-editdistance][#editdistance]], [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]] | [[https://code.dennyzhang.com/edit-distance][Leetcode: Edit Distance]]  |
|   2 | Remove duplicate letters     | [[https://code.dennyzhang.com/review-greedy][#greedy]], [[https://code.dennyzhang.com/review-stack][#stack]]                    | [[https://code.dennyzhang.com/remove-duplicate-letters][Remove Duplicate Letters]] |
|   3 | Word ladder                  | [[https://code.dennyzhang.com/review-string][#string]], [[https://code.dennyzhang.com/review-bfs][#bfs]], [[https://code.dennyzhang.com/review-backtracking][#backtracking]]       | [[https://code.dennyzhang.com/word-ladder][Leetcode: Word Ladder]]    |
|   4 |                              |                                    |                          |
|   5 |                              |                                    |                          |
#+TBLFM: $1=@-1$1+1;N
** Top 5 Math Problems
| Num | Problem                             | Category/Tag | Summary                   |
|-----+-------------------------------------+--------------+---------------------------|
|   1 | Check prime - [[https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes][Sieve of Eratosthenes]] | [[https://code.dennyzhang.com/tag/prime][#prime]]       | [[https://code.dennyzhang.com/count-primes][Leetcode: Count Primes]]    |
|   2 | Check leap year                     | [[https://code.dennyzhang.com/tag/leapyear][#leapyear]]    | [[https://code.dennyzhang.com/day-of-the-week][Leetcode: Day of the Week]] |
|   3 | gcd                                 | [[https://code.dennyzhang.com/review-gcd][#gcd]]         |                           |
|   4 | Rectangle                           | [[https://code.dennyzhang.com/review-rectangle][#rectangle]]   |                           |
#+TBLFM: $1=@-1$1+1;N
** Top 50 General Problems
| Num | Problem                                              | Category/Tag                      | Example                                                                      |
|-----+------------------------------------------------------+-----------------------------------+------------------------------------------------------------------------------|
|   1 | Longest substring with at most K distinct characters | [[https://code.dennyzhang.com/review-slidingwindow][#slidingwindow]], [[https://code.dennyzhang.com/followup-atmostkdistinct][#atmostkdistinct]]  | [[https://code.dennyzhang.com/longest-substring-with-at-most-k-distinct-characters][Leetcode: Longest Substring with At Most K Distinct Characters]]               |
|   2 | Longest subarray with maximum K 0s                   | [[https://code.dennyzhang.com/review-slidingwindow][#slidingwindow]]                    | [[https://code.dennyzhang.com/max-consecutive-ones-iii][Leetcode: Max Consecutive Ones III]]                                           |
|   3 | Seperate a list into several groups                  | [[https://code.dennyzhang.com/followup-groupelements][#groupelements]], [[https://code.dennyzhang.com/review-twopointer][#twopointer]]       | [[https://code.dennyzhang.com/summary-ranges][Leetcode: Summary Ranges]]                                                     |
|   4 | Split string                                         | [[https://code.dennyzhang.com/review-string][#string]]                           | [[https://code.dennyzhang.com/license-key-formatting][Leetcode: License Key Formatting]]                                             |
|   5 | TopK problem                                         | [[https://code.dennyzhang.com/review-heap][#heap]], [[https://code.dennyzhang.com/followup-topk][#topk]]                      | [[https://code.dennyzhang.com/top-k-frequent-elements][Leetcode: Top K Frequent Elements]], [[https://code.dennyzhang.com/find-k-pairs-with-smallest-sums][Leetcode: Find K Pairs with Smallest Sums]] |
|   6 | Longest Palindromic Subsequence                      | [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]]               | [[https://code.dennyzhang.com/longest-palindromic-subsequence][Leetcode: Longest Palindromic Subsequence]]                                    |
|   7 | Sort one array based on another array                | [[https://code.dennyzhang.com/tag/sortbyfunction][#sortbyfunction]]                   | [[https://code.dennyzhang.com/relative-sort-array][Leetcode: Relative Sort Array]]                                                |
|   8 | Next Permutation                                     | [[https://code.dennyzhang.com/review-greedy][#greedy]], [[https://code.dennyzhang.com/followup-nextpermutation][#nextpermutation]]         | [[https://code.dennyzhang.com/next-permutation][Leetcode: Next Permutation]]                                                   |
|   9 | [[https://leetcode.com/articles/a-recursive-approach-to-segment-trees-range-sum-queries-lazy-propagation/][Range update with lazy propagation]]                   | [[https://code.dennyzhang.com/tag/ecombinedcaculation][#combinedcaculation]], [[https://code.dennyzhang.com/followup-rangesum][#rangesum]]    | [[https://code.dennyzhang.com/corporate-flight-bookings][Leetcode: Corporate Flight Bookings]]                                          |
|  10 | Monotone stack for consecutive subarrays             | [[https://code.dennyzhang.com/review-monotone][#montone]]                          | [[https://code.dennyzhang.com/online-stock-span][Leetcode: Online Stock Span]], [[https://code.dennyzhang.com/sum-of-subarray-minimums][Leetcode: Sum of Subarray Minimums]]              |
|  11 | Get all possibilities of subsets                     | [[https://code.dennyzhang.com/tag/subset][#subset]], [[https://code.dennyzhang.com/review-backtracking][#backtracking]]            | [[https://code.dennyzhang.com/subsets-ii][Leetcode: Subsets II]], [[https://code.dennyzhang.com/subsets][Leetcode: Subsets]]                                      |
|  12 | Choose k numbers from a list                         | [[https://code.dennyzhang.com/review-combination][#combination]], [[https://code.dennyzhang.com/review-backtracking][#backtracking]]       | [[https://code.dennyzhang.com/combination-sum-ii][Leetcode: Combination Sum II]]                                                 |
|  13 | Combination from multiple segments                   | [[https://code.dennyzhang.com/review-combination][#combination]], [[https://code.dennyzhang.com/review-backtracking][#backtracking]]       | [[https://code.dennyzhang.com/letter-combinations-of-a-phone-number][Leetcode: Letter Combinations of a Phone Number]]                              |
|  14 | Remove nodes from linked list                        | [[https://code.dennyzhang.com/review-linkedlist][#linkedlist]], [[https://code.dennyzhang.com/followup-presum][#presum]]              | [[https://code.dennyzhang.com/remove-zero-sum-consecutive-nodes-from-linked-list][Leetcode: Remove Zero Sum Consecutive Nodes from Linked List]]                 |
|  15 | Check whether a linked list has a loop               |                                   |                                                                              |
|  16 | Two pointers                                         | [[https://code.dennyzhang.com/followup-twosum][#twosum]], [[https://code.dennyzhang.com/review-twopointer][#twopointer]]              | [[https://code.dennyzhang.com/two-sum][Leetcode: Two Sum]]                                                            |
|  17 | Buy stock for maximum profit list                    | [[https://code.dennyzhang.com/tag/array][#array]], [[https://code.dennyzhang.com/review-greedy][#greedy]], [[https://code.dennyzhang.com/tag/buystock][#buystock]]        | [[https://code.dennyzhang.com/stock-decision][Leetcode: Best Time to Buy and Sell Stock]]                                    |
|  18 | Prefix search from a list of strings                 | [[https://code.dennyzhang.com/review-trie][#trie]]                             | [[https://code.dennyzhang.com/longest-word-in-dictionary][Leetcode: Longest Word in Dictionary]]                                         |
|  19 | Factor Combinations                                  | [[https://code.dennyzhang.com/review-combination][#combination]], [[https://code.dennyzhang.com/review-backtracking][#backtracking]]       | [[https://code.dennyzhang.com/factor-combinations][Leetcode: Factor Combinations]]                                                |
|  20 | Permutation without duplicates                       | [[https://code.dennyzhang.com/tag/permutation][#permutation]], [[https://code.dennyzhang.com/review-backtracking][#backtracking]]       | [[https://code.dennyzhang.com/palindrome-permutation-ii][Leetcode: Palindrome Permutation II]]                                          |
|  21 | Int to string or string to int                       | [[https://code.dennyzhang.com/review-bitmanipulation][#bitmanipulation]]                  |                                                                              |
|  22 | [[https://www.geeksforgeeks.org/convert-number-negative-base-representation/][Convert a number into negative base representation]]   | [[https://code.dennyzhang.com/review-bitmanipulation][#bitmanipulation]], [[https://code.dennyzhang.com/followup-baseconversion][#baseconversion]] | [[https://code.dennyzhang.com/convert-to-base-2][Leetcode: Convert to Base -2]]                                                 |
|  23 | Network connectivity                                 | [[https://code.dennyzhang.com/review-unionfind][#unionfind]]                        | [[https://code.dennyzhang.com/friend-circles][Leetcode: Friend Circles]]                                                     |
|  24 | Build relationship among different sets              | [[https://code.dennyzhang.com/review-unionfind][#unionfind]]                        | [[https://code.dennyzhang.com/accounts-merge][Leetcode: Accounts Merge]]                                                     |
|  25 | [[https://en.wikipedia.org/wiki/Knapsack_problem][Knapsack problem to maximize benefits]]                | [[https://code.dennyzhang.com/review-knapsack][#knapsack]]                         | [[https://code.dennyzhang.com/coin-change][Leetcode: Coin Change]]                                                        |
|  26 | Find the next greater value                          | [[https://code.dennyzhang.com/review-monotone][#monotone]]                         | [[https://code.dennyzhang.com/daily-temperatures][Leetcode: Daily Temperatures]]                                                 |
|  27 | Meeting conflict                                     | [[https://code.dennyzhang.com/review-interval][#interval]]                         | [[https://code.dennyzhang.com/meeting-rooms][Leetcode: Meeting Rooms]], [[https://code.dennyzhang.com/course-schedule][Leetcode: Course Schedule]]                           |
|  28 | Minimum conference rooms                             | [[https://code.dennyzhang.com/review-interval][#interval]], [[https://code.dennyzhang.com/tag/overlappinginterval][#overlappinginterval]]   | [[https://code.dennyzhang.com/meeting-rooms-ii][Leetcode: Meeting Rooms II]]                                                   |
|  29 | Quick slow pointers                                  | [[https://code.dennyzhang.com/review-twopointer][#twopointer]]                       | [[https://code.dennyzhang.com/middle-of-linked-list][LintCode: Middle of Linked List]]                                              |
|  30 | Longest Repeating Character with at most K changes   | [[https://code.dennyzhang.com/review-slidingwindow][#slidingwindow]]                    | [[https://code.dennyzhang.com/longest-repeating-character-replacement][Leetcode: Longest Repeating Character Replacement]]                            |
|  31 | Count out of boundary paths in a 2D matrix           | [[https://code.dennyzhang.com/followup-countdistinctmoves][#countdistinctmoves]], [[https://code.dennyzhang.com/review-bfs][#bfs]]         | [[https://code.dennyzhang.com/out-of-boundary-paths][Leetcode: Out of Boundary Paths]]                                              |
|  32 | Coloring graph                                       | [[https://code.dennyzhang.com/review-bfs][#bfs]], [[https://code.dennyzhang.com/review-dfs][#dfs]]                        | [[https://code.dennyzhang.com/minesweeper][Leetcode: Minesweeper]]                                                        |
|  33 | Prefix and Suffix Search                             | [[https://code.dennyzhang.com/review-trie][#trie]]                             | [[https://code.dennyzhang.com/prefix-and-suffix-search][Leetcode: Prefix and Suffix Search]]                                           |
|  34 | Remove duplicate letters                             | [[https://code.dennyzhang.com/review-greedy][#greedy]], [[https://code.dennyzhang.com/review-string][#string]], [[https://code.dennyzhang.com/review-stack][#stack]]          | [[https://code.dennyzhang.com/remove-duplicate-letters][Leetcode: Remove Duplicate Letters]]                                           |
|  35 | Beautiful array                                      | [[https://code.dennyzhang.com/review-divideconquer][#divideconquer]]                    | [[https://code.dennyzhang.com/beautiful-array][Leetcode: Beautiful Array]]                                                    |
|  36 | Whether 132 pattern exists in array                  | [[https://code.dennyzhang.com/review-stack][#stack]]                            | [[https://code.dennyzhang.com/132-pattern][Leetcode: 132 Pattern]]                                                        |
|  37 | Detect conflicts of intervals                        | [[https://code.dennyzhang.com/review-interval][#interval]]                         | [[https://code.dennyzhang.com/non-overlapping-intervals][Leetcode: Non-overlapping Intervals]]                                          |
|  38 | Segment tree: solves range query problems quickly    | [[https://code.dennyzhang.com/review-segmenttree][#segmenttree]]                      | [[https://code.dennyzhang.com/range-sum-query-mutable][Leetcode: Range Sum Query - Mutable]]                                          |
|  39 | Find best meeting points for a list of nodes         | [[https://code.dennyzhang.com/tag/meetingpoint][#meetingpoint]]                     | [[https://code.dennyzhang.com/best-meeting-point][Leetcode: Best Meeting Point]]                                                 |
|  40 | Find the size of longest wiggle subsequence          | [[https://code.dennyzhang.com/followup-subsequence][#subsequence]], [[https://code.dennyzhang.com/followup-wiggle][#wiggle]]             | [[https://code.dennyzhang.com/wiggle-subsequence][Leetcode: Wiggle Subsequence]]                                                 |
|  41 | Sequence reconstruction                              | [[https://code.dennyzhang.com/review-topologicalsort][#topologicalsort]]                  | [[https://code.dennyzhang.com/sequence-reconstruction][Leetcode: Sequence Reconstruction]]                                            |
|  42 | Construct Binary Tree from String                    | [[https://code.dennyzhang.com/review-stack][#stack]]                            | [[https://code.dennyzhang.com/construct-binary-tree-from-string][Construct Binary Tree from String]]                                            |
|  43 | Use more space to save time                          | [[https://code.dennyzhang.com/review-stack][#stack]]                            | [[https://code.dennyzhang.com/min-stack][Leetcode: Min Stack]]                                                          |
|  44 | Min max game problems                                | [[https://code.dennyzhang.com/review-minmax][#minmax]], [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]]      | [[https://code.dennyzhang.com/predict-the-winner][Leetcode: Predict the Winner]], [[https://code.dennyzhang.com/stone-game][Leetcode: Stone Game]]                           |
|  45 | Shortest Subarray with Sum at Least K                | [[https://code.dennyzhang.com/review-monotone][#monotone]]                         | [[https://code.dennyzhang.com/shortest-subarray-with-sum-at-least-k][Leetcode: Shortest Subarray with Sum at Least K]]                              |
|  46 |                                                      |                                   | [[https://en.wikipedia.org/wiki/Travelling_salesman_problem][Travelling salesman problem]]                                                  |
|  47 |                                                      |                                   | [[https://code.dennyzhang.com/remove-duplicates-from-sorted-array-ii][Leetcode: Remove Duplicates from Sorted Array II]]                             |
|  48 |                                                      |                                   |                                                                              |
|  49 |                                                      |                                   |                                                                              |
|  50 |                                                      |                                   |                                                                              |
#+TBLFM: $1=@-1$1+1;N

#+BEGIN_HTML
<a href="https://cheatsheet.dennyzhang.com"><img align="right" width="185" height="37" src="https://raw.githubusercontent.com/dennyzhang/cheatsheet.dennyzhang.com/master/images/cheatsheet_dns.png"></a>
#+END_HTML

** Common Tips For Clean Code
| Num | Name                                                                  | Summary                                                                 |
|-----+-----------------------------------------------------------------------+-------------------------------------------------------------------------|
|   1 | Caculate sum of a range quickly                                       | [[https://code.dennyzhang.com/followup-presum][#presum]],[[https://code.dennyzhang.com/maximum-subarray][Leetcode: Maximum Subarray]]                                      |
|   2 | Move in four directions for a matrix                                  | [[https://code.dennyzhang.com/sliding-puzzle][Leetcode: Sliding Puzzle]]                                                |
|   3 | Split string by multiple seperator                                    | [[https://code.dennyzhang.com/brace-expansion][Leetcode: Brace Expansion]]                                               |
|   4 | Add a dummy tailing element to simplify code                          | [[https://code.dennyzhang.com/brace-expansion][Leetcode: Brace Expansion]]                                               |
|   5 | Fast slow pointers                                                    | [[https://code.dennyzhang.com/middle-of-linked-list][LintCode: Middle of Linked List]]                                         |
|   6 | Deep copy an array                                                    | [[https://code.dennyzhang.com/combination-sum][Leetcode: Combination Sum]]                                               |
|   7 | Use arrays instead of hashmaps, if possible                           | [[https://code.dennyzhang.com/number-of-days-in-a-month][Leetcode: Number of Days in a Month]]                                     |
|   8 | Control the order of dfs                                              | [[https://code.dennyzhang.com/subsets-ii][Leetcode: Subsets II]]                                                    |
|   9 | Avoid inserting into the head of an array                             | [[https://code.dennyzhang.com/path-in-zigzag-labelled-binary-tree][Leetcode: Path In Zigzag Labelled Binary Tree]]                           |
|  10 | From right to left, instead of left to right                          | [[https://code.dennyzhang.com/merge-sorted-array][Leetcode: Merge Sorted Array]]                                            |
|  11 | Think the other way around                                            | =Add Items= vs =Remove Items=, =Increase Counter= vs =Decrease Counter= |
|  12 | Avoid uncessary if...else...                                          | res[i] = (diff/2 <= k), [[https://code.dennyzhang.com/can-make-palindrome-from-substring][Leetcode: Can Make Palindrome from Substring]]    |
|  13 | To get the case of K, solve: at most K - at most (K-1)                | [[https://code.dennyzhang.com/subarrays-with-k-different-integers][Leetcode: Subarrays with K Different Integers]]                           |
|  14 | Instead of deleting entry from hashmap, decrease counter              | [[https://code.dennyzhang.com/longest-substring-with-at-most-k-distinct-characters][Leetcode: Longest Substring with At Most K Distinct Characters]]          |
|  15 | Find the max/min; If not found, return 0                              | [[https://code.dennyzhang.com/minimum-area-rectangle][Leetcode: Minimum Area Rectangle]]                                        |
|  16 | With helper function vs without helper function                       | [[https://code.dennyzhang.com/longest-repeating-character-replacement][Leetcode: Longest Repeating Character Replacement]]                       |
|  17 | Instead of adding a character, try to delete one                      | [[https://code.dennyzhang.com/longest-string-chain][Leetcode: Longest String Chain]]                                          |
|  18 | [[https://code.dennyzhang.com/tag/roudtrippass][#roudtrippass]]: from left to right, then right to left                 | [[https://code.dennyzhang.com/shortest-distance-to-a-character][Leetcode: Shortest Distance to a Character]]                              |
|  19 | Delayed caculation to simplify the code                               | [[https://code.dennyzhang.com/interval-list-intersections][Leetcode: Interval List Intersections]]                                   |
|  20 | Instead of removing, add padding elements                             | [[https://code.dennyzhang.com/duplicate-zeros][Leetcode: Duplicate Zeros]]                                               |
|  21 | Initialize array with n+1 length to simplify code                     | [[https://code.dennyzhang.com/range-addition][Leetcode: Range Addition]]                                                |
|  22 | Look for off-by-one errors, sometimes use i+1<len(l) vs i<len(l)      | [[https://code.dennyzhang.com/previous-permutation-with-one-swap][Leetcode: Previous Permutation With One Swap]]                            |
|  23 | Hashmap can reduce caculation, but may complicate things too          | [[https://code.dennyzhang.com/maximum-frequency-stack][Leetcode: Maximum Frequency Stack]]                                       |
|  24 | Sliding window to get the longest size of subarray                    | [[https://code.dennyzhang.com/max-consecutive-ones-iii][Leetcode: Max Consecutive Ones III]]                                      |
|  25 | In matrix dfs, change cell to impossible value to avoid state hashmap | [[https://code.dennyzhang.com/word-search-ii][Leetcode: Word Search II]]                                                |
|  26 | Avoid unnecessary precheck                                            |                                                                         |
|  27 | One pass instead of two pass                                          |                                                                         |
|  28 | Swiping line algorithm                                                |                                                                         |
|  29 | Add a dummy head node for linked list                                 |                                                                         |
|  30 | Hide details which are irrelevant                                     |                                                                         |
|  31 | Avoid deleting element from hashmaps                                  |                                                                         |
#+TBLFM: $1=@-1$1+1;N
** Golang Tips
| Name                                              | Summary                                                                                        |
|---------------------------------------------------+------------------------------------------------------------------------------------------------|
| Golang return a tuple                             | =func dfs(root *TreeNode, max *float64) (sum int, cnt int)=, [[https://code.dennyzhang.com/maximum-average-subtree][Leetcode: Maximum Average Subtree]] |
| Use strings.Builder, instead of string            | [[https://code.dennyzhang.com/unique-email-addresses][Leetcode: Unique Email Addresses]]                                                               |
| Variable Conversion                               | =float64(x_int/y_int)= != =float64(x_int)/float64(y_int)=, [[https://code.dennyzhang.com/maximum-average-subtree][Leetcode: Maximum Average Subtree]]   |
| For a list of objects, pass by value or reference | =f(l []*TreeNode)= vs =f(l *[]*TreeNode)=, [[https://code.dennyzhang.com/lowest-common-ancestor-of-a-binary-tree][Leetcode: Lowest Common Ancestor of a Binary Tree]]   |
** Whiteboard Tips
| Name                                                    | Summary                                                               |
|---------------------------------------------------------+-----------------------------------------------------------------------|
| Focus on your key motivations or thinkings              | Pivot quickly from interviewers' feedback                             |
| Brute force algorithm add values                        | Intuitive algorithms are  usually the starting points of optimal ones |
| Work through specific test case clearly                 | Reduce bugs, and help to obtain interviewers' feedback early          |
| Naming variables could be tricky                        | Settle down a set of variables per your preference                    |
| You don't have to crack all problems/optimal algorithms |                                                                       |
** More Data Structure
| Name           | Summary |
|----------------+---------|
| Tree map       |         |
| [[https://www.geeksforgeeks.org/inverted-index/][Inverted Index]] |         |

** Resource For Code Problems
| Name                 | Summary                                                                                  |
|----------------------+------------------------------------------------------------------------------------------|
| Leetcode summary     | [[https://leetcode.com/problemset/top-google-questions/][Link: Top Google Questions]], [[https://leetcode.com/problemset/top-100-liked-questions/][Link: Top 100 Liked Questions]], [[https://leetcode.com/problemset/top-interview-questions/][Link: Top Interview Questions]] |
| Leetcode summary     | [[https://github.com/kdn251/interviews][GitHub: kdn251/interviews]]                                                                |
| Leetcoder on YouTube | [[https://www.youtube.com/channel/UCUBt1TDQTl1atYsscVoUzoQ/videos][lee 215]], [[https://www.youtube.com/channel/UCDVYMs-SYiJxhIU2T0e7gzw/videos][Aoxiang Cui]], [[https://www.youtube.com/channel/UCamg61pfZpRnTp5-L4XEM1Q][happygirlzt]]                                                        |
| Online test websites | [[https://www.spoj.com][spoj.com]], [[https://codingcompetitions.withgoogle.com/codejam/schedule][Google - codejam]], [[https://www.hackerrank.com][hackerrank.com]], [[https://www.hackerrank.com/domains/algorithms?filters%5Bdifficulty%5D%5B%5D=hard&filters%5Bstatus%5D%5B%5D=unsolved][hackerrank - hard]], [[https://codeforces.com][codeforces.com]], [[http://poj.org/][poj.org]]   |
| Online test websites | [[http://acm.hdu.edu.cn/][acm.hdu.edu.cn]], [[http://acm.zju.edu.cn/onlinejudge/][acm.zju.edu.cn]], [[http://acm.timus.ru][acm.timus.ru]], [[https://uva.onlinejudge.org][uva.onlinejudge.org]]                        |
| [[https://visualgo.net/en][visualgo]]             | visualising data structures and algorithms through animation                             |
| Reference            | [[https://www.geeksforgeeks.org][geeksforgeeks.org]], [[https://www.youtube.com/channel/UCZCFT11CWBi3MHNlGf019nw][Youtube: Abdul Bari - Algorithm]]                                       |

** Resource For Code Problems - In Chinese                         :noexport:
| Name      | Summary                                  |
|-----------+------------------------------------------|
| Reference | [[https://github.com/imhuay/Algorithm_Interview_Notes-Chinese/tree/master/C-算法][Algorithm_Interview_Notes-Chinese/C-算法]] |
** More Resources
License: Code is licensed under [[https://www.dennyzhang.com/wp-content/mit_license.txt][MIT License]].

https://www.cs.princeton.edu/~rs/AlgsDS07/

https://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/
#+BEGIN_HTML
<a href="https://cheatsheet.dennyzhang.com"><img align="right" width="201" height="268" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/denny_201706.png"></a>

<a href="https://cheatsheet.dennyzhang.com"><img align="right" src="https://raw.githubusercontent.com/dennyzhang/cheatsheet.dennyzhang.com/master/images/cheatsheet_dns.png"></a>
#+END_HTML
* org-mode configuration                                           :noexport:
#+STARTUP: overview customtime noalign logdone showall
#+DESCRIPTION:
#+KEYWORDS:
#+LATEX_HEADER: \usepackage[margin=0.6in]{geometry}
#+LaTeX_CLASS_OPTIONS: [8pt]
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage{lastpage}
#+LATEX_HEADER: \usepackage{fancyhdr}
#+LATEX_HEADER: \pagestyle{fancy}
#+LATEX_HEADER: \fancyhf{}
#+LATEX_HEADER: \rhead{Updated: \today}
#+LATEX_HEADER: \rfoot{\thepage\ of \pageref{LastPage}}
#+LATEX_HEADER: \lfoot{\href{https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-leetcode-A4}{GitHub: https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-leetcode-A4}}
#+LATEX_HEADER: \lhead{\href{https://cheatsheet.dennyzhang.com/cheatsheet-slack-A4}{Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4}}
#+AUTHOR: Denny Zhang
#+EMAIL:  denny@dennyzhang.com
#+TAGS: noexport(n)
#+PRIORITIES: A D C
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_EXCLUDE_TAGS: exclude noexport
#+SEQ_TODO: TODO HALF ASSIGN | DONE BYPASS DELEGATE CANCELED DEFERRED
#+LINK_UP:
#+LINK_HOME:
* TODO [#A] 刷题个人感悟                                           :noexport:
1. 一味追求最优解可能就会误入歧途.
   面试中对candidate的期待是通过一些算法题展示CS基础素质,所以面试题都是能够现场依靠CS基础知识推出结果的.
   https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=538566&extra=page%3D1%26filter%3Ddigest%26digest%3D1%26digest%3D1
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO mitbbs job hunting: http://www.mitbbs.com/bbsdoc/JobHunting.html :noexport:
* TODO code template: quicksort/quickselection                     :noexport:
* TODO [#A] 刷题进阶Tips--分享给那些有刷题经验或工作经验的人: https://www.1point3acres.com/bbs/thread-289223-1-1.html :noexport:
* TODO 谈谈coding面试的种类与基本应对策略: https://www.1point3acres.com/bbs/thread-435598-1-1.html :noexport:
* TODO 刷题经验                                                    :noexport:
https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=533799&extra=page%3D1%26filter%3Ddigest%26digest%3D1%26digest%3D1
刷题时候的一个小经验

https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=521357&extra=page%3D1%26filter%3Ddigest%26digest%3D1%26digest%3D1
让刷题幸福感提高的一百个心得

#+BEGIN_EXAMPLE
1. 刷题前一个小时不要吃太多碳水化合物.饭困影响发挥
2. 睡眠很重要.睡不好第二天你根本不想动脑刷题
3. 有的时候自己想的头大,可以把题目发给你的朋友,让他帮你想想,然后聊聊天
4. 状态不好的时候,可以尝试一边听歌/聊天/游戏,一边看题目,不是为了凑时间,而是适当分散精力,减少那种无力感,同时又把难啃的骨头啃下去.
5. 仅仅是放下刷题,去做别的事情,是不能消除无力感的,因为这种感觉是源于你的水平不到位.
6. 请放弃使用ide进行刷题
7. 请不要因为6感到无力或者难为情,相信我这是短暂的（一两天的时间）然后你会进步的更快,更有成就感的
9. 刷题配合有氧运动效果更佳.如跑步,笔者用游泳,感觉二者互相促进,神清气爽
10. 特别想编程的时候,多提交几个题目
11. 不想编程的时候,多看看别人的解法和写代码的结构和细节
#+END_EXAMPLE
* TODO general经验                                                 :noexport:
- 找一个/一群正在找工作的小伙伴,互改简历.做self-intro的mockup interview

* pitfalls                                                         :noexport:
- 要写相关的经验.不相关的经验哪怕含金量再高,也只会让HR觉得"你不该来这个岗位".
