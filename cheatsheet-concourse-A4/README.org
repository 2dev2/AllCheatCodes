* CheatSheet: Concourse                                              :VMware:
:PROPERTIES:
:type:     pivotal, pks, vmware
:export_file_name: cheatsheet-concourse-A4.pdf
:END:

#+BEGIN_HTML
<a href="https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-concourse-A4"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
<div id="the whole thing" style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>

<br/><br/>
<a href="http://makeapullrequest.com" target="_blank" rel="nofollow"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome"/></a>
#+END_HTML

- PDF Link: [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-concourse-A4/cheatsheet-concourse-A4.pdf][cheatsheet-concourse-A4.pdf]], Category: [[https://cheatsheet.dennyzhang.com/category/vmware/][vmware]]
- Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-concourse-A4
- Related posts: [[https://cheatsheet.dennyzhang.com/cheatsheet-bosh-A4][Bosh CheatSheet]], [[https://cheatsheet.dennyzhang.com/cheatsheet-pks-A4][PKS CheatSheet]], [[https://github.com/topics/denny-cheatsheets][#denny-cheatsheets]]

File me [[https://github.com/dennyzhang/cheatsheet.dennyzhang.hcom/issues][Issues]] or star [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com][this repo]]
** Concourse Advanced
| Name                                                 | Summary                                                                                        |
|------------------------------------------------------+------------------------------------------------------------------------------------------------|
| fly set-pipeline run into "error: forbidden"         | Need to logout from both +fly client+ (=fly logout --all=) and +Concourse GUI+. [[https://github.com/concourse/concourse/issues/2134][Link: GitHub]]   |
| github-release resource cannot find old tag          | =fly -t $target cr -r $pipeline-name/$resource-name -f tag:$tag= [[https://stackoverflow.com/questions/41108427/concourse-github-release-resource-cannot-find-older-versions-or-tags][Link]]                          |
| List team details for all targets                    | =fly -t $target teams -d=, =~/.flyrc=                                                          |
| Concourse UI runs into a blank page                  | If pipeline has recursive dependencies, Concourse UI may have issue to run its javascript code |
| Split one pipeline yaml into small *reusable* pieces | Not supported. An uncomfortable workaround: generating yaml with other tools. [[https://github.com/concourse/concourse/issues/1994][Link: GitHub]]     |
| Add a readonly member to one team                    | Not supported. Concourse only support authentication control, but not authorization control    |
| Hijack to containers with a successful run           | Not supported. By design when task has passed, the container will be deleted                   |
| Does Concourse have REST API?                        | Not supported so far. [[https://github.com/concourse/concourse/issues/1122][Link: GitHub]], [[https://github.com/concourse/atc/blob/d8da97675ef4b8941ebf372dbd63f200d56da6cd/routes.go#L105-L197][Link: Concourse REST endpoints]]                             |
| Reference                                            | [[https://github.com/starkandwayne/concourse-tutorial][concourse-tutorial]], [[https://github.com/pivotalservices/concourse-pipeline-samples][concourse-pipeline-samples]]                                                 |
** Concourse Resources & Examples
| Name                                        | Summary                                                |
|---------------------------------------------+--------------------------------------------------------|
| Hello world pipeline                        | example: [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-concourse-A4/helloworld.yml][helloworld.yml]]                                |
| Pass output to input across different tasks | example: [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-concourse-A4/tasks-output-input.yml][tasks-output-input.yml]]                        |
| Trigger pipeline test every 5 minutes       | example: [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-concourse-A4/run-test-regularly.yml][run-test-regularly.yml]]                        |
| [[https://github.com/concourse/git-resource][git-resource]]                                | example: [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-concourse-A4/example-git.yml][example-git.yml]]                               |
| [[https://github.com/pivotalservices/concourse-curl-resource][concourse-curl-resource]]: http download link | example: [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-concourse-A4/url-download.yml][url-download.yml]]                              |
| [[https://github.com/concourse/github-release-resource][github-release]]                              |                                                        |
| [[https://github.com/concourse/docker-image-resource][docker-image-resource]]: docker image         |                                                        |
| [[https://github.com/frodenas/gcs-resource][gcs-resource]]: google bucket                 |                                                        |
| [[https://github.com/pivotalservices/file-downloader-resource][file-downloader-resource]]                    | enable downloading pivotal product files and stemcells |
| PCF pipelines examples                      | [[https://github.com/pivotal-cf/pcf-pipelines/tree/v0.23.0][GitHub: pcf-pipelines]]                                  |

[[https://cheatsheet.dennyzhang.com/cheatsheet-concourse-A4][https://raw.githubusercontent.com/dennyzhang/cheatsheet.dennyzhang.com/master/cheatsheet-concourse-A4/concourse-sample.png]]
** Concourse Containers
| Name                            | Summary                                    |
|---------------------------------+--------------------------------------------|
| Login to container              | =fly -t $target hijack -u $job_url=        |
| Run command without sudden exit | =nohup SOMECOMMAND &=; =tail -f nohup.out= |
** Concourse Concepts
| Name                  | Summary                                                         |
|-----------------------+-----------------------------------------------------------------|
| [[https://concourse-ci.org/fly.html][fly]]                   | Pipelines are configured entirely via the fly. There is no GUI. |
| Teams                 |                                                                 |
| [[https://concourse-ci.org/fly.html#fly-targets][Targets]]               | Alias of Concourse endpoints                                    |
| Pipelines             |                                                                 |
| Jobs                  |                                                                 |
| Tasks                 |                                                                 |
| Resource              | Allow you to define inputs and outputs to jobs in a pipeline    |
| Behaviors             |                                                                 |
| [[https://concourse-ci.org/tags-step-modifier.html][Step: tags]]            | Use tag to match workers                                        |
| bbl (bosh-bootloader) | [[https://github.com/cloudfoundry/bosh-bootloader][GitHub: bosh-bootloader]]                                         |
| Reference             | [[https://concourse-ci.org/concepts.html][Link: Concourse Concepts]], [[https://concoursetutorial.com/][Link: concoursetutorial.com]]           |
** Concourse Pipeline
| Name                              | Summary                                                                            |
|-----------------------------------+------------------------------------------------------------------------------------|
| List all authenticated end points | =fly targets= [[https://concourse-ci.org/fly.html#fly-targets][Link: fly targets]]                                                    |
| Get fly version                   | =fly --version=                                                                    |
| fly login                         | =fly -t $target login -c $concourse_url -n $team_name=                             |
| Get pipeline definition           | =fly -t $target get-pipeline -p $job-name > job.yaml= [[https://concourse-ci.org/managing-pipelines.html#fly-get-pipeline][Link: fly-getpipeline]]        |
| Update pipeline                   | =fly -t $target set-pipeline -p $pipeline_name -c pipeline.yml -l credentials.yml= |
| Update pipeline                   | =fly -t $target set-pipeline -p $pipeline_name -c pipeline.yml -v env1=var1=       |
| Destroy pipeline                  | =fly -t $target destroy-pipeline -p $pipeline_name=                                |
| Format pipeline                   | =fly format-pipeline -c pipeline.yml=                                              |
| Validate pipeline                 | =fly validate-pipeline -c pipeline.yml=                                            |
#+BEGIN_HTML
<a href="https://www.dennyzhang.com"><img align="right" width="185" height="37" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/dns_small.png"></a>
#+END_HTML
** Concourse Security
| Name                               | Summary                                                                          |
|------------------------------------+----------------------------------------------------------------------------------|
| Install ansible vault in mac       | =brew install ansible=                                                           |
| Fly login to the default main team | =fly -t $target login -n main -c $concourse_url=                                 |
| Fly login to a different team      | =fly -t $target login -n $team_name -c $concourse_url=                           |
| List all teams                     | =fly -t $target teams=,  =fly -t $target teams -d=                               |
| Fly logout all targets             | =fly logout --all=                                                               |
| Create a team                      | =fly -t $target set-team -n $team_name --allow-all-users=                        |
| Destroy a team                     | =fly -t $target destroy-team --team-name $team_name=                             |
| Grant Github team access           | =fly -t $target set-team -n $team_name --github-org $my_org=                     |
| Login to a team                    | =fly -t $target set-team -n $team_name=                                          |
| Fly conf file                      | =~/.flyrc=                                                                       |
| Reference                          | After login to the *main* team, you can update other teams. [[https://concourse-ci.org/teams.html][Link: Concourse Team]] |
** Concourse Workers
| Name                          | Summary                     |
|-------------------------------+-----------------------------|
| List all concourse workers    | =fly -t $target workers=    |
| List all concourse containers | =fly -t $target containers= |
** fly Online Usage
#+BEGIN_EXAMPLE
bash-3.2$ fly --help
error: Usage:
  fly [OPTIONS] <command>

Application Options:
  -t, --target=              Concourse target name
  -v, --version              Print the version of Fly and exit
      --verbose              Print API requests and responses
      --print-table-headers  Print table headers even for redirected output

Help Options:
  -h, --help                 Show this help message

Available commands:
  abort-build        Abort a build (aliases: ab)
  builds             List builds data (aliases: bs)
  check-resource     Check a resource (aliases: cr)
  checklist          Print a Checkfile of the given pipeline (aliases: cl)
  containers         Print the active containers (aliases: cs)
  destroy-pipeline   Destroy a pipeline (aliases: dp)
  destroy-team       Destroy a team and delete all of its data (aliases: dt)
  execute            Execute a one-off build using local bits (aliases: e)
  expose-pipeline    Make a pipeline publicly viewable (aliases: ep)
  format-pipeline    Format a pipeline config (aliases: fp)
  get-pipeline       Get a pipeline's current configuration (aliases: gp)
  help               Print this help message
  hide-pipeline      Hide a pipeline from the public (aliases: hp)
  hijack             Execute a command in a container (aliases: intercept, i)
  jobs               List the jobs in the pipelines (aliases: js)
  login              Authenticate with the target (aliases: l)
  logout             Release authentication with the target (aliases: o)
  order-pipelines    Orders pipelines (aliases: op)
  pause-job          Pause a job (aliases: pj)
  pause-pipeline     Pause a pipeline (aliases: pp)
  pause-resource     Pause a resource (aliases: pr)
  pipelines          List the configured pipelines (aliases: ps)
  prune-worker       Prune a stalled, landing, landed, or retiring worker (aliases: pw)
  rename-pipeline    Rename a pipeline (aliases: rp)
  rename-team        Rename a team (aliases: rt)
  set-pipeline       Create or update a pipeline's configuration (aliases: sp)
  set-team           Create or modify a team to have the given credentials (aliases: st)
  status             Login status
  sync               Download and replace the current fly from the target (aliases: s)
  targets            List saved targets (aliases: ts)
  teams              List the configured teams (aliases: t)
  trigger-job        Start a job in a pipeline (aliases: tj)
  unpause-job        Unpause a job (aliases: uj)
  unpause-pipeline   Un-pause a pipeline (aliases: up)
  unpause-resource   Unpause a resource (aliases: ur)
  validate-pipeline  Validate a pipeline config (aliases: vp)
  volumes            List the active volumes (aliases: vs)
  watch              Stream a build's output (aliases: w)
  workers            List the registered workers (aliases: ws)
#+END_EXAMPLE
** fly set-pipeline Online Usage
#+BEGIN_EXAMPLE
> fly  set-pipeline --help
error: Usage:
  fly [OPTIONS] set-pipeline [set-pipeline-OPTIONS]

Application Options:
  -t, --target=                     Concourse target name
  -v, --version                     Print the version of Fly and exit
      --verbose                     Print API requests and responses
      --print-table-headers         Print table headers even for redirected output

Help Options:
  -h, --help                        Show this help message

[set-pipeline command options]
      -n, --non-interactive         Skips interactions, uses default values
          --no-color                Disable color output
          --check-creds             Validate credential variables against credential manager
      -p, --pipeline=               Pipeline to configure
      -c, --config=                 Pipeline configuration file
      -v, --var=[NAME=STRING]       Specify a string value to set for a variable in the pipeline
      -y, --yaml-var=[NAME=YAML]    Specify a YAML value to set for a variable in the pipeline
      -l, --load-vars-from=         Variable flag that can be used for filling in template values in configuration from a YAML file
#+END_EXAMPLE
** More Resources
http://www.mikeball.info/blog/concourse-git-resource/

https://concoursetutorial.com/

License: Code is licensed under [[https://www.dennyzhang.com/wp-content/mit_license.txt][MIT License]].
#+BEGIN_HTML
<a href="https://www.dennyzhang.com"><img align="right" width="201" height="268" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/denny_201706.png"></a>
<a href="https://www.dennyzhang.com"><img align="right" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/dns_small.png"></a>

<a href="https://www.linkedin.com/in/dennyzhang001"><img align="bottom" src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a>
<a href="https://github.com/dennyzhang"><img align="bottom"src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a>
<a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img align="bottom" src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a>
#+END_HTML
* org-mode configuration                                           :noexport:
#+STARTUP: overview customtime noalign logdone showall
#+DESCRIPTION:
#+KEYWORDS:
#+LATEX_HEADER: \usepackage[margin=0.6in]{geometry}
#+LaTeX_CLASS_OPTIONS: [8pt]
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage{lastpage}
#+LATEX_HEADER: \usepackage{fancyhdr}
#+LATEX_HEADER: \pagestyle{fancy}
#+LATEX_HEADER: \fancyhf{}
#+LATEX_HEADER: \rhead{Updated: \today}
#+LATEX_HEADER: \rfoot{\thepage\ of \pageref{LastPage}}
#+LATEX_HEADER: \lfoot{\href{https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-concourse-A4}{GitHub: https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-concourse-A4}}
#+LATEX_HEADER: \lhead{\href{https://cheatsheet.dennyzhang.com/cheatsheet-slack-A4}{Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-concourse-A4}}
#+AUTHOR: Denny Zhang
#+EMAIL:  denny@dennyzhang.com
#+TAGS: noexport(n)
#+PRIORITIES: A D C
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_EXCLUDE_TAGS: exclude noexport
#+SEQ_TODO: TODO HALF ASSIGN | DONE BYPASS DELEGATE CANCELED DEFERRED
#+LINK_UP:
#+LINK_HOME:
* TODO collect more concourse example                              :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO what's input and output?                                    :noexport:
* TODO where the variables are?                                    :noexport:
* TODO git-resource vs github-release                              :noexport:
* HALF Why delete kubo hasn't been triggered                       :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO a problematic pipeline can make the dashboard unavailable   :noexport:
* TODO fail to hijack to concourse container                       :noexport:
* TODO [#A] Fly my kubo test to raas                               :noexport:
* TODO scenario: How I login to releng container, and run bosh command? :noexport:
https://pks-releng.ci.cf-app.com/teams/main/pipelines/vsphere-nsx-om22-upgrade-minor-oratos.vrli-ci/jobs/upgrade-test/builds/1

export container_id=$(ls /tmp/build)
cd pks-releng-ci/tasks/test-upgrade-tile
pwd
SCRIPT_ROOT=/tmp/build/79f5611b/pks-releng-ci/tasks/test-upgrade-tile
pushd /tmp/build/79f5611b/pks-releng-ci/tasks/test-upgrade-tile
source ../../lib/sshuttle-helpers.sh
source ../../lib/kubectl-helpers.sh
source ../../lib/pks-setup.sh
export ENV_LOCK_FILE=/tmp/build/79f5611b/environment-lock/metadata
popd

pks login --skip-ssl-verification --username alana --password password --api pks.pks-api.cf-app.com


export SCRIPT_ROOT="/tmp/build/$container_id/git-pks-ci/ci/scripts"
source "${SCRIPT_ROOT}/lib/bosh-helpers.sh"
source "${SCRIPT_ROOT}/lib/credhub-helpers.sh"
source "${SCRIPT_ROOT}/lib/nsx-helpers.sh"
source "${SCRIPT_ROOT}/lib/opsman-helpers.sh"

init_env

bosh -n deployments

#+BEGIN_EXAMPLE
   /Users/zdenny  ~/Downloads/fly-3.14 -t releng hijack -u https://pks-releng.ci.cf-app.com/teams/main/pipelines/vsphere-nsx-om22-upgrade-minor-oratos.vrli-ci/jobs/upgrade-test/builds/1                  ✘ 1
1: build #1, step: download-kubectl, type: task
2: build #1, step: download-kubectl, type: task
3: build #1, step: download-pks-cli, type: task
4: build #1, step: download-pks-cli, type: task
5: build #1, step: environment-lock, type: get
6: build #1, step: failure-logs, type: get
7: build #1, step: failure-logs, type: put
8: build #1, step: gather-logs, type: task
9: build #1, step: get-product-version-from-tile, type: task
10: build #1, step: notify, type: get
11: build #1, step: notify, type: put
12: build #1, step: pipeline-metadata, type: get
13: build #1, step: upgrade-test, type: task
choose a container: 13
bash-4.4# bosh vms
Expected non-empty Director URL

Exit code 1
bash-4.4# export container_id=$(ls /tmp/build)
bash-4.4# export ENV_LOCK_FILE=/tmp/build/$container_id/pks-lock/metadata
bash-4.4#
bash-4.4# export SCRIPT_ROOT="/tmp/build/$container_id/git-pks-ci/ci/scripts"
bash-4.4# source "${SCRIPT_ROOT}/lib/bosh-helpers.sh"
bash: /tmp/build/79f5611b/git-pks-ci/ci/scripts/lib/bosh-helpers.sh: No such file or directory
bash-4.4# source "${SCRIPT_ROOT}/lib/credhub-helpers.sh"
bash: /tmp/build/79f5611b/git-pks-ci/ci/scripts/lib/credhub-helpers.sh: No such file or directory
bash-4.4# source "${SCRIPT_ROOT}/lib/nsx-helpers.sh"
bash: /tmp/build/79f5611b/git-pks-ci/ci/scripts/lib/nsx-helpers.sh: No such file or directory
bash-4.4# source "${SCRIPT_ROOT}/lib/opsman-helpers.sh"
bash: /tmp/build/79f5611b/git-pks-ci/ci/scripts/lib/opsman-helpers.sh: No such file or directory
bash-4.4#
bash-4.4# init_env
bash: init_env: command not found
bash-4.4#
bash-4.4# bosh -n deployments
Expected non-empty Director URL

Exit code 1
bash-4.4# which bosh
/usr/local/bin/bosh
bash-4.4# bosh -n deployments
Expected non-empty Director URL

Exit code 1
#+END_EXAMPLE
* TODO For concourse pipelines, draw a diagram                     :noexport:
* TODO concourse takes quite a long time for job to schedule a task. Thus container is not ready for hijack :noexport:
#+BEGIN_EXAMPLE
   /Users/zdenny/Dropbox/private_data/work/vmware/code/pks-vrops-release/ci  ~/Downloads/fly-v4.1.0 -t pks hijack -u https://ci.vcna.io/teams/oratos-vmware/pipelines/pks-vrops-install-tile/jobs/add-tile/builds/5                   vrops-tile-integration ✘ ✹ ✭  ✘ 1
1: build #5, step: add-tile-to-opsman, type: task
2: build #5, step: environment-lock, type: get
3: build #5, step: p-pks-integrations, type: get
choose a container: 1
error: websocket: bad handshake
#+END_EXAMPLE
* TODO concourse: how to transfer a big file across jobs in the same pipeline? :noexport:
*.pivotal
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO write code in concourse yaml file                           :noexport:
* TODO Blog: X Performance Tips To Speed Up Your Concourse Pipeline :noexport:
** TODO [#A] Avoid pass big files across tasks: How often concourse check tile resource in gcp bucket? :noexport:
** TODO Concourse speed up the docker image load                   :noexport:
** TODO More parallel: Performs the given steps in parallel.
https://concourse-ci.org/jobs.html
* TODO [#A] Concourse significant delay across steps               :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO Concourse pipeline use multiple file instead of one yaml file :noexport:
https://github.com/concourse/concourse/issues/1994
* TODO Concourse manage the layout                                 :noexport:
Each row for one project
https://ci.vcna.io/?search=team%3A%20oratos-vmware
* TODO [#A] Pass the output to multiple pipelines                  :noexport:
* TODO Concourse: Interprate variable template: high order rendering :noexport:
https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-concourse-A4/render-for-render.md
* TODO Concourse: avoid run one pipeline in parallel               :noexport:
* TODO Concourse execute one step only                             :noexport:
https://github.com/starkandwayne/concourse-tutorial/blob/master/tutorials/basic/task-scripts/task_show_uname.yml
* TODO [#B] Concourse caculate the total duration for a given pipeline :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO Concourse get the failure rate for a given pipeline         :noexport:
* TODO Concourse how to explictly and implictly dependency         :noexport:
* TODO concourse: worker tag: https://ci.vcna.io/teams/oratos-vmware/pipelines/pks-vrops-install-tile/jobs/claim-lock/builds/1 :noexport:
#+BEGIN_EXAMPLE
pks-vrops-install-tile
/
claim-lock
dennyzhang
claim-lock #1
started	18m 37s ago
finished	18m 36s ago
duration	1s
1
path	oratos-vmware/vrli/pivotal-container-service-1.3.0-build.6.pivotal
untested-tile
no workers satisfying: resource type 'gcs-resource', tag 'VMware'

available workers: 
  - platform 'linux'
  - platform 'linux'
  - platform 'linux'
  - platform 'linux'
  - platform 'linux'
  - platform 'linux'
  - platform 'linux'
  - platform 'linux'
  - platform 'linux'
  - platform 'linux'
  - platform 'linux'
  - platform 'linux'
  - platform 'linux'
  - platform 'linux'
#+END_EXAMPLE

#+BEGIN_EXAMPLE
- name: claim-lock
  serial: true
  plan:
  - get: untested-tile
    trigger: true
    tags:
    - VMware
  - aggregate:
    - get: p-pks-integrations
      tags:
      - VMware
    - get: git-environments-metadata
      tags:
      - VMware
#+END_EXAMPLE
* TODO concourse add timeout for one group of tasks                :noexport:
* TODO [#A] release-env: use the same lock: https://ci.vcna.io/teams/main/pipelines/wavefront-proxy-release/jobs/release-env/builds/3 :noexport:IMPORTANT:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO Concourse worker: https://concourse-ci.org/worker-internals.html :noexport:
* TODO concourse doesn't work well with git push --force           :noexport:
* TODO Concourse get env to override parameter                     :noexport:
* TODO [#A] Concourse workflow hack-nimbus, what if when initialize-vrli has finished, but locks are still in claimed state.
* TODO Concourse cycle dependency                                  :noexport:
#+BEGIN_EXAMPLE
but for the record; please be careful not to create any cycles in a Concourse pipeline such as:
```get: A, passed: B
get: B, passed: A```

because Concourse doesn't do cycle detection and everything will be bad
#+END_EXAMPLE
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO Concourse tag the worker, and use it for the same pipeline  :noexport:
* TODO Concourse: insufficient subnets remaining in the pool       :noexport:
https://github.com/concourse/concourse/issues/293

"Insufficient subnets" is akin to "out of memory" or "out of disk"
* TODO Concourse container guardian                                :noexport:
* TODO Concourse different colors: https://ci.vcna.io/teams/oratos-vmware/pipelines/pks-vrli-install-tile/jobs/test-tile-deployment/builds/11 :noexport:
